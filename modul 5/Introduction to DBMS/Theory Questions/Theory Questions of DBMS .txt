=> Theory Questions of DBMS = 

1.Introduction to SQL
Theory Questions:

1. What is SQL, and why is it essential in database management?
=> SQL (Structured Query Language) is a standard language for managing relational databases, enabling data storage, retrieval, updating, and administration.

2. Explain the difference between DBMS and RDBMS.
=> DBMS manages databases without enforcing relationships between tables. RDBMS stores data in related tables using keys and follows Codd's relational model.

3. Describe the role of SQL in managing relational databases.
=>SQL provides commands to:
=> Define database structure ,Manipulate data ,Enforce integrity constraints ,Control access ,Query related data across tables

4. What are the key features of SQL?
=> Declarative language ,Standardized syntax ,Platform independence ,Comprehensive data manipulation ,Transaction control ,Security features


2. SQL Syntax
Theory Questions:

1. What are the basic components of SQL syntax?
=> SQL Syntax Components
=> Keywords (SELECT, INSERT) ,Identifiers (table/column names) ,Clauses (WHERE, GROUP BY) ,Expressions ,Predicates ,Queries ,Statements

2. Write the general structure of an SQL SELECT statement.
=> SELECT Statement Structure
=>SELECT [DISTINCT] columns FROM table

[WHERE condition] [GROUP BY columns]

[HAVING condition] [ORDER BY columns [ASC|DESC]];


3. Explain the role of clauses in SQL statements.
=>7. Clauses in SQL
=> WHERE: Filters rows  , GROUP BY: Groups rows

=>HAVING: Filters groups , ORDER BY: Sorts results



3. SQL Constraints
Theory Questions:

1. What are constraints in SQL? List and explain the different types of constraints.
=> SQL Constraints

=> NOT NULL: Disallows nulls , UNIQUE: Enforces uniqueness

=> PRIMARY KEY: Unique identifier , FOREIGN KEY: References PK ,CHECK: Validates data

2. How do PRIMARY KEY and FOREIGN KEY constraints differ?

=>Primary Key uniquely identifies a table row. Foreign Key references a PK in another table to establish relationships.

3. What is the role of NOT NULL and UNIQUE constraints?

=>NOT NULL prevents null values. UNIQUE ensures all values are different (except nulls).


4. Main SQL Commands and Sub-commands (DDL)
Theory Questions:

1. Define the SQL Data Definition Language (DDL).

=> DDL (Data Definition Language)
=>Commands that define database structure: CREATE ,ALTER ,DROP ,TRUNCATE ,RENAME

2. Explain the CREATE command and its syntax.
=>CREATE Command

=>CREATE TABLE table_name (
    column1 datatype constraints,
    column2 datatype constraints,
    ...
);

3. What is the purpose of specifying data types and constraints during table creation?

=>Data types define what values can be stored. Constraints enforce data integrity rules during creation.

5. ALTER Command
Theory Questions:

1. What is the use of the ALTER command in SQL?

=>ALTER Command Modifies existing table structure:

2. How can you add, modify, and drop columns from a table using ALTER?

=>ALTER TABLE table_name
ADD column_name datatype;

=>ALTER TABLE table_name
MODIFY column_name new_datatype;

=>ALTER TABLE table_name
DROP COLUMN column_name;


6. DROP Command
Theory Questions:

1. What is the function of the DROP command in SQL?
=>DROP Command Permanently removes database objects:

=>DROP TABLE table_name;

2. What are the implications of dropping a table from a database?
=> DROP Implications ,Permanent data loss ,Breaks dependencies ,Requires privileges ,Cannot be undone without backup


7. Data Manipulation Language (DML)
Theory Questions:

1. Define the INSERT, UPDATE, and DELETE commands in SQL.
=>DML Commands

=> INSERT: Adds new rows

=> UPDATE: Modifies rows

=> DELETE: Removes rows

=> All use WHERE clause to target specific rows.

2. What is the importance of the WHERE clause in UPDATE and DELETE operations?
=> WHERE Clause Importance
Without WHERE, commands affect all rows - potentially dangerous for UPDATE/DELETE.

8. Data Query Language (DQL)
Theory Questions:

1. What is the SELECT statement, and how is it used to query data?
=>SELECT Statement
Retrieves data from tables. Can:

=> Filter (WHERE)

=> Sort (ORDER BY)

=> Group (GROUP BY)

=> Join tables

=> Calculate aggregates

2. Explain the use of the ORDER BY and WHERE clauses in SQL queries

=>WHERE filters before retrieval. ORDER BY sorts after retrieval.


9. Data Control Language (DCL)
Theory Questions:

1. What is the purpose of GRANT and REVOKE in SQL?

=> GRANT gives privileges to users. REVOKE removes privileges.

2. How do you manage privileges using these commands?

=>  GRANT & REVOKE  are  Used for security management.
 

10. Transaction Control Language (TCL)
Theory Questions:

1. What is the purpose of the COMMIT and ROLLBACK commands in SQL?

=> COMMIT makes changes permanent. ROLLBACK undoes uncommitted changes. 

2. Explain how transactions are managed in SQL databases.

=>  COMMIT & ROLLBACK  are  Essential for transaction control.

11. SQL Joins
Theory Questions:

1. Explain the concept of JOIN in SQL. What is the difference between INNER JOIN, LEFT
JOIN, RIGHT JOIN, and FULL OUTER JOIN?

=> A JOIN combines rows from two or more tables based on a related column between them. 
It allows you to retrieve data from multiple tables in a single query by establishing relationships.

=> INNER: Matching rows only

=> LEFT: All left + matching right

=> RIGHT: All right + matching left

=> FULL: All rows from both


2. How are joins used to combine data from multiple tables?

=> SQL JOINs Combine data from multiple tables:

=> INNER: Matching rows only

=> LEFT: All left + matching right

=> RIGHT: All right + matching left

=> FULL: All rows from both


12. SQL Group By
Theory Questions:

1. What is the GROUP BY clause in SQL? How is it used with aggregate functions?

=>GROUP BY Groups rows by column values for aggregation:

=>  SELECT department, COUNT(*)
       FROM employees
       GROUP BY department;

2. Explain the difference between GROUP BY and ORDER BY.

=> 1. GROUP BY is for aggregation - it collapses multiple rows into summary groups
=> 2.ORDER BY is for organization - it sorts rows without altering the dataset


13. SQL Stored Procedure
Theory Questions:

1. What is a stored procedure in SQL, and how does it differ from a standard SQL query?

=> A stored procedure is a precompiled collection of SQL statements stored in the database that performs a specific task or set of tasks. 
 It's like a saved program that can be executed whenever needed.
=> Stored procedures represent a more powerful, database-centric approach to data operations compared to standard queries,
 offering better performance, security, and maintainability for complex or frequently-used operations.

2. Explain the advantages of using stored procedures.

=> These are the advantages of using stored procedures Improve performance ,Enhance security ,Reduce network traffic ,Promote code reuse.


14. SQL View
Theory Questions:

1. What is a view in SQL, and how is it different from a table?
=>A view is a virtual table that doesn't store data physically, but instead provides a saved SQL query 
that dynamically retrieves data from underlying tables when accessed.

=>Data Source , Performance ,	Updatability	, Storage Space , Data Freshness.	


2. Explain the advantages of using view sin SQL databases.

=> Simplify complex queries
=> Restrict data access
=>Provide logical data independence


15. SQL Triggers
Theory Questions:

1. What is a trigger in SQL? Describe its types and when they are used.
=> Triggers Automated procedures that execute when specified events occur:

=> BEFORE / AFTER  triggers
INSERT / UPDATE / DELETE  triggers
Used for auditing, validation.

2. Explain the difference between INSERT, UPDATE, and DELETE triggers.

=> INSERT  --> After new row is added  ,	Can access the new row values

=> UPDATE --> After existing row is changed	, Can access both old and new values

=> DELETE  --> Before/after row is removed ,	Can access the deleted row values


16. Introduction to PL/SQL
Theory Questions:

1. What is PL/SQL, and how does it extend SQL's capabilities?

=>PL/SQL (Procedural Language extensions to SQL) is Oracle's proprietary programming language that combines SQL with procedural programming features.
 It integrates seamlessly with Oracle Database and provides a robust environment for building database-centric applications.

=> 1.Procedural Constructs  (IF, LOOP, etc.)
=> 2.Block Structure  (DECLARE-BEGIN-EXCEPTION-END)
=> 3.Variable Handling  (scalars, records, collections)
=> 4.Modular Programming  (procedures, functions, packages)
=> 5.Enhanced Performance  (server-side execution, bulk operations)
=> 6.Transaction Control  (COMMIT, ROLLBACK, autonomous transactions)

2. List and explain the benefits of using PL/SQL.
=> PL/SQL  Oracle's procedural extension to SQL:

=> Adds programming constructs

=> Supports variables, loops, exceptions

=> Enables complex business logic


17. PL/SQL Control Structures
Theory Questions:

1. What are control structures in PL/SQL? Explain the IF-THEN and LOOP control structures.

=> Control structures are programming blocks that let you control how your PL/SQL code runs.
 They help make decisions, repeat actions, and manage the flow of your program.

IF-THEN Structure (For Decisions)

=> IF condition THEN
  -- Do something
ELSIF another_condition THEN
  -- Do something else
ELSE
  -- Default action
END IF;

=> LOOP
  -- Do something
  EXIT WHEN condition; -- Stop when condition is true
END LOOP;


2. How do control structures in PL/SQL help in writing complex queries?

=> They make your database code smarter by:
=> Adding logic (like "if this then that")
=>Processing data step-by-step
=> Handling errors gracefully
=> Repeating tasks automatically



18. SQL Cursors
Theory Questions:

1. What is a cursor in PL/SQL? Explain the difference between implicit and explicit cursors.

=> Cursors , Work areas for processing query results:

=> Implicit: Automatic for DML

=> Explicit: Programmer-defined Used for row-by-row processing

2. When would you use an explicit cursor over an implicit one?

=> 1. For Complex Queries:
=> 2.Row-by-Row Processing:
=> 3.Better Performance Control:
=> 4.Reusability:
=> 5.Error Handling:


19. Rollback and Commit Savepoint
Theory Questions:

1. Explain the concept of SAVEPOINT in transaction management. How do ROLLBACK and
COMMIT interact with savepoints?

=> A SAVEPOINT is like a "undo point" in a transaction. It lets you roll back (undo) only part of your changes instead of the whole transaction.

=> 1.SAVEPOINT point_name → Saves your progress (like a game checkpoint).
=> 2.ROLLBACK TO point_name → Undoes changes after that savepoint (but keeps earlier changes).
=> 3.COMMIT → Saves everything permanently (all savepoints disappear).
=> 4.ROLLBACK (without savepoint) → Cancels the whole transaction (full undo).

2. When is it useful to use savepoints in a database transaction?
=> When to Use SAVEPOINTS
=> 1. For "Oops!" Moments
=> Made a mistake? Roll back just the bad part instead of starting over.

=> 2. Big Tasks with Small Steps
=> Breaking a long transaction into smaller pieces.

=> 3. Testing Safely
=> Try a risky change (like deleting data), then roll back if it breaks something.

=> 4. Batch Processing
=> Updating 1000 records? Save after each 100 → if it crashes, restart from the last savepoint.



